name: Continuous integration
on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch: # allows manual triggering
  schedule:
    - cron: '1 11 * * *'

env:
  # Bump this number to invalidate the GH actions cache
  cache-version: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  test-nixpkgs:
    name: Build & Test - Nixpkgs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc-version: ["ghc_8_10_7", "ghc_9_0_2", "ghc_9_2_5", "ghc_9_4_5", "ghc_9_6_5", "ghc_9_8_1"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Mount Bazel cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/repo-cache
          key: repo-cache-${{ runner.os }}-nixpkgs-${{ env.cache-version }}
      - uses: cachix/install-nix-action@fc6e360bedc9ee72d75e701397f0bb30dce77568 # v31.5.2
        with:
          nix_path: nixpkgs=./nixpkgs.nix
      - uses: tweag/configure-bazel-remote-cache-auth@144b0b915f13a418f5eafe2f68d19564ec136c62 # v0.1.1
        with:
          buildbuddy_api_key: ${{ secrets.BUILDBUDDY_API_KEY }}
          bazelrc_path: .bazelrc.local
      - name: Configure
        run: |
          cat >>.bazelrc.local <<EOF
          build --config=remote-cache
          build --repository_cache=~/repo-cache/
          EOF
          ln -s ../.bazelrc.local example/.bazelrc.local
          ln -s ../../.bazelrc.local tests/alternative-deps/.bazelrc.local
      - name: Build & test himportscan
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          run: bazel test //himportscan:tasty --config=${{ matrix.ghc-version }}
      - name: Build & run gazelle
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          working-directory: example
          run: bazel run //:gazelle --config=${{ matrix.ghc-version }}
      - name: Build & run gazelle fix
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          working-directory: example
          run: bazel run //:gazelle --config=${{ matrix.ghc-version }} -- fix
      - name: Build & test generated rules
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          working-directory: example
          run: bazel test //... --config=${{ matrix.ghc-version }}
      - name: Build & run gazelle with alternative dependencies
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          working-directory: tests/alternative-deps
          run: bazel run //:gazelle --config=${{ matrix.ghc-version }}
      - name: Test for buildifier suggestions
        uses: tweag/run-nix-shell@0d73770bd05096508387d191649e5e858a3c2654 # v0.2.1
        with:
          run: bazel test //:buildifier-test

  all_ci_tests:
    runs-on: ubuntu-latest
    needs:
      - test-nixpkgs
    if: ${{ always() }}
    steps:
      - uses: cgrindel/gha_join_jobs@8a9736c29a7e5ebd9f3af2870f59cb6d563b6659 # v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
